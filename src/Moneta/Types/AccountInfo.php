<?php

// Warning! This code was generated by WSDL2PHP tool. 
// author: Filippov Andrey <afi.work@gmail.com> 
// see https://solo-framework-lib.googlecode.com 
// Timestamp: 1393417765 


namespace Moneta\Types;

/**
 * Тип, описывающий атрибуты счета в системе МОНЕТА.РУ.
	 * Account information container type.
	 * 
 */
class AccountInfo
{
	
	/**
	 * Номер счета в системе МОНЕТА.РУ
	 * Account number
	 * 
	 *
	 * @var long
	 */
	 public $id = null;

	/**
	 * Валюта данного счета
	 * Currency of account
	 * 
	 *
	 * @var string
	 */
	 public $currency = null;

	/**
	 * Баланс на данном счете
	 * Current balance of account
	 * 
	 *
	 * @var decimal
	 */
	 public $balance = null;

	/**
	 * Доступный баланс на данном счете
	 * Available balance of account
	 * 
	 *
	 * @var decimal
	 */
	 public $availableBalance = null;

	/**
	 * Тип счета в системе МОНЕТА.РУ
	 * Type of account
	 * 
	 *
	 * @var int
	 */
	 public $type = null;

	/**
	 * Статус счета в системе МОНЕТА.РУ
	 * Status of account
	 * 
	 *
	 * @var int
	 */
	 public $status = null;

	/**
	 * Название счета в системе МОНЕТА.РУ. Необязательное поле
	 * Alias of account. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $alias = null;

	/**
	 * URL после списания средств. Необязательное поле.
	 * URL on debiting. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $onSuccessfulDebitUrl = null;

	/**
	 * URL после зачисления средств. Необязательное поле.
	 * URL on crediting. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $onSuccessfulCreditUrl = null;

	/**
	 * Код проверки целостности данных. Необязательное поле.
	 * Payment form data integrity signature. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $signature = null;

	/**
	 * Если баланс счета меньше данного значения, то раз в сутки уходит уведомление об этом событии. Необязательное поле.
	 * Daily notifications if balance is less than threshold. Optional.
	 * 
	 *
	 * @var decimal
	 */
	 public $lowBalanceThreshold = null;

	/**
	 * Если баланс счета больше данного значения, то раз в сутки уходит уведомление об этом событии. Необязательное поле.
	 * Daily notifications if balance is greater than threshold. Optional.
	 * 
	 *
	 * @var decimal
	 */
	 public $highBalanceThreshold = null;

	/**
	 * Информация о доступе к счету. Информация отдается, если счет является делегированным. Необязательное поле.
	 * Account access information. Available if the account is delegated, otherwise omitted. Optional.
	 * 
	 *
	 * @var AccountAccessInfo
	 */
	 public $accountAccess = null;

	/**
	 * Счет-прототип с которого берутся свойства "по умолчанию". Необязательное поле.
	 * Prototype account for default properties values. Optional.
	 * 
	 *
	 * @var long
	 */
	 public $prototypeAccountId = null;

	/**
	 * URL после отмены списания средств. Необязательное поле.
	 * URL on cancelled debit. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $onCancelledDebitUrl = null;

	/**
	 * URL после отмены зачисления средств. Необязательное поле.
	 * URL on cancelled credit. Optional.
	 * 
	 *
	 * @var string
	 */
	 public $onCancelledCreditUrl = null;

	/**
	 * Дополнительные свойства счета.
	 * Для получения этого поля в запросе необходимо выставлять атрибут version равный или больше VERSION_2.
	 * Возможные ключи:
	 * paymentPasswordType - тип платежного пароля.
	 * STATIC - статический платежный пароль,
	 * SEQUENCE_BY_ORDER - последовательность по порядку,
	 * SMS_SIMPLE - sms пароль,
	 * SMS_SESSION - sms пароль (сессионный),
	 * TOTP_RFC6238 - time-based one-time password algorithm;
	 * paymentPasswordChallengeRequired - если в ответе придет поле с ключом key="paymentPasswordChallengeRequired"
	 * и значением value="true", то перед проведением операции следует сделать запрос "GetAccountPaymentPasswordChallengeRequest",
	 * который вернет строку запроса для платежного пароля. Это значение необходимо использовать в поле "paymentPasswordChallenge"
	 * в запросах на проведение операции (например: "PaymentRequest", "TransferRequest", "AuthoriseTransactionRequest" и т.д.);
	 * Additional account attributes.
	 * For retrieving additional account attributes the request attribute "version" has to be set to "VERSION_2" or greater.
	 * Possible keys:
	 * paymentPasswordType - payment password type.
	 * STATIC - static payment password,
	 * SEQUENCE_BY_ORDER - ordered sequence,
	 * SMS_SIMPLE - sms password,
	 * SMS_SESSION - sms password (sessional),
	 * TOTP_RFC6238 - time-based one-time password algorithm;
	 * paymentPasswordChallengeRequired - if the response contains an attribute with the key="paymentPasswordChallengeRequired"
	 * and value="true", you have to call "GetAccountPaymentPasswordChallengeRequest" for payer's account to retrieve "paymentPasswordChallenge",
	 * which is used within financial processing requests such as
	 * "PaymentRequest", "TransferRequest", "AuthoriseTransactionRequest";
	 * 
	 *
	 * @var KeyValueAttribute
	 */
	 public $attribute = null;

	/**
	 * Дополнительные свойства счета.
	 * Для получения этого поля в запросе необходимо выставлять атрибут version равный или больше VERSION_2.
	 * Возможные ключи:
	 * paymentPasswordType - тип платежного пароля.
	 * STATIC - статический платежный пароль,
	 * SEQUENCE_BY_ORDER - последовательность по порядку,
	 * SMS_SIMPLE - sms пароль,
	 * SMS_SESSION - sms пароль (сессионный),
	 * TOTP_RFC6238 - time-based one-time password algorithm;
	 * paymentPasswordChallengeRequired - если в ответе придет поле с ключом key="paymentPasswordChallengeRequired"
	 * и значением value="true", то перед проведением операции следует сделать запрос "GetAccountPaymentPasswordChallengeRequest",
	 * который вернет строку запроса для платежного пароля. Это значение необходимо использовать в поле "paymentPasswordChallenge"
	 * в запросах на проведение операции (например: "PaymentRequest", "TransferRequest", "AuthoriseTransactionRequest" и т.д.);
	 * Additional account attributes.
	 * For retrieving additional account attributes the request attribute "version" has to be set to "VERSION_2" or greater.
	 * Possible keys:
	 * paymentPasswordType - payment password type.
	 * STATIC - static payment password,
	 * SEQUENCE_BY_ORDER - ordered sequence,
	 * SMS_SIMPLE - sms password,
	 * SMS_SESSION - sms password (sessional),
	 * TOTP_RFC6238 - time-based one-time password algorithm;
	 * paymentPasswordChallengeRequired - if the response contains an attribute with the key="paymentPasswordChallengeRequired"
	 * and value="true", you have to call "GetAccountPaymentPasswordChallengeRequest" for payer's account to retrieve "paymentPasswordChallenge",
	 * which is used within financial processing requests such as
	 * "PaymentRequest", "TransferRequest", "AuthoriseTransactionRequest";
	 * 
	 *
	 * @param KeyValueAttribute
	 *
	 * @return void
	 */
	public function addAttribute(KeyValueAttribute $item)
	{
		$this->attribute[] = $item;
	}

}
?>